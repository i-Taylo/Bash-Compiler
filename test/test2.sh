#!/bin/bash


# THIS CODE GENERATED BY AI


# Check if the compiler is functioning properly
echo "Running complex Bash script for testing..."

# Create a temporary directory and files
TEMP_DIR=$(mktemp -d)
TEMP_FILE="${TEMP_DIR}/tempfile.txt"

# Function to handle cleanup
cleanup() {
    echo "Cleaning up..."
    rm -rf "$TEMP_DIR"
    echo "Cleanup completed."
}
trap cleanup EXIT

# Generate random numbers and calculate sum
echo "Generating 10 random numbers and calculating their sum..."
NUMBERS=()
SUM=0
for i in {1..10}; do
    RANDOM_NUMBER=$((RANDOM % 100))
    NUMBERS+=("$RANDOM_NUMBER")
    SUM=$((SUM + RANDOM_NUMBER))
    echo "Number $i: $RANDOM_NUMBER"
done

echo "Total sum of numbers: $SUM"
echo "Average: $((SUM / 10))"

# Save numbers to file
echo "Saving numbers to file: $TEMP_FILE"
printf "%s\n" "${NUMBERS[@]}" > "$TEMP_FILE"

# Fetch and parse a webpage (requires curl)
URL="https://example.com"
echo "Downloading content from $URL..."
curl -s "$URL" -o "${TEMP_DIR}/webpage.html"

# Extract the title from the webpage
echo "Extracting the title from the downloaded webpage..."
TITLE=$(grep -oP '(?<=<title>)(.*?)(?=</title>)' "${TEMP_DIR}/webpage.html")
echo "Page title: $TITLE"

# Array manipulation
echo "Reversing the array of numbers..."
REVERSED_NUMBERS=()
for (( idx=${#NUMBERS[@]}-1 ; idx>=0 ; idx-- )); do
    REVERSED_NUMBERS+=("${NUMBERS[idx]}")
done

echo "Reversed numbers: ${REVERSED_NUMBERS[*]}"

# Simulate a complex file operation
echo "Performing complex file operations..."
COMPLEX_FILE="${TEMP_DIR}/complex_file.txt"
touch "$COMPLEX_FILE"

for i in {1..5}; do
    echo "Writing line $i to complex file" >> "$COMPLEX_FILE"
done

echo "File contents:"
cat "$COMPLEX_FILE"

# Conditionals and loop control
echo "Performing conditional checks and loop control..."

for number in "${NUMBERS[@]}"; do
    if (( number > 50 )); then
        echo "Found a number greater than 50: $number"
    else
        echo "Number $number is 50 or less"
    fi
done

echo "All tasks completed. Exiting script."
